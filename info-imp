kubectl exec -it pod-httpd -- /bin/bash
//-- is to seprate kubectl command from /bin/bash!


//with default namespace
kubectl get pods

//with created namespace
kubectl get pods -n "namespace"

//resources
requests specify the initial amount of resources that the container is guaranteed to receive.
limits specify the maximum amount of resources that the container is allowed to consume.

//stratergy
maxSurge means max number of pods that can be create while the pods are donw
maxUnavailable mean max number of pods that can be down at a time


// rollout
// rollout status for current rollout
kubectl rollout status deployment/deployment-name
// rollout to last change
kubectl rollout undo deployment/deployment-name
// rollout to new change
kubectl rollout deployment/deployment-name
// rollout history
kubectl rollout history deployment/deployment-name


//cron job
command: This field is used to specify the command that should be run when the container starts. It is the main command that gets executed. If the command field is defined, it replaces the default command specified by the Docker image.

Example:

yaml
Copy code
command: ["/bin/my-custom-command", "arg1", "arg2"]
In this example, the container will run /bin/my-custom-command arg1 arg2 as its main command.

args: This field is used to provide additional arguments that should be passed to the command specified in the command field. It allows you to append arguments to the command.

Example:

yaml
Copy code
command: ["/bin/my-custom-command"]
args: ["arg1", "arg2"]



